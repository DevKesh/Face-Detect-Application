{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/keshav/Desktop/Final_Project/facedetectionapp/src/App.js\";\nimport Particles from 'react-particles-js';\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'dd91e4203deb4b1495e3e65ab6a5ed75'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 130,\n      density: {\n        enable: true,\n        vaue_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = (data, i) => {\n      let clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n      let image = document.getElementById('inputimage');\n      let width = Number(image.width);\n      let height = Number(image.height);\n      return {\n        leftcol: clarifaiFace.left_col * width,\n        toprow: clarifaiFace.top_row * height,\n        rightcol: width - clarifaiFace.right_col * width,\n        bottomrow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: [...this.state.box, box]\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        for (let i = 0; i < response.outputs[0].data.regions.length; i++) {\n          this.displayFaceBox(this.calculateFaceLocation(response, i));\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/keshav/Desktop/Final_Project/facedetectionapp/src/App.js"],"names":["Particles","React","Component","Clarifai","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","vaue_area","constructor","calculateFaceLocation","data","i","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftcol","left_col","toprow","top_row","rightcol","right_col","bottomrow","bottom_row","displayFaceBox","box","setState","state","onInputChange","event","input","target","onButtonSubmit","imageUrl","models","predict","FACE_DETECT_MODEL","then","response","length","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import Particles from 'react-particles-js';\nimport React , { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'dd91e4203deb4b1495e3e65ab6a5ed75'\n });\n\n\n\nconst particlesOptions = {\n\n  particles: {\n    number:{\n      value:130,\n      density:{\n        enable:true,\n        vaue_area:800\n      }\n    }\n    }\n  }\n\n\n\n\n\nclass App extends Component {\n\n  constructor(){\n\n\n    super();\n    this.state = {\n\n      input: '',\n      imageUrl: '',\n      box:[],\n    }\n  }\n  calculateFaceLocation = (data, i) => {\n    let clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n    let image = document.getElementById('inputimage');\n    let width = Number(image.width);\n    let height = Number(image.height);\n    return {\n      leftcol: clarifaiFace.left_col * width,\n      toprow: clarifaiFace.top_row * height,\n      rightcol: width - (clarifaiFace.right_col * width),\n      bottomrow: height - (clarifaiFace.bottom_row * height)\n    }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({\n    box: [...this.state.box, box]\n  });\n}\n\n  onInputChange = (event) => {\n    this.setState({input:event.target.value});\n  }\n\n  onButtonSubmit = () => {\n\n    this.setState({imageUrl:this.state.input})\n\n    ;\n\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response => {\n      for(let i = 0; i < response.outputs[0].data.regions.length; i++){\n        this.displayFaceBox(this.calculateFaceLocation(response, i))\n      }\n    }\n    )\n    .catch(err => console.log(err));\n}\n      \n  \n  render()\n  {\n    return(\n    <div className=\"App\">\n       <Particles className = 'particles' \n              params={particlesOptions}\n            />\n    <Navigation/>\n     <Logo/>\n     <Rank/>\n     <ImageLinkForm  onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}/>\n     \n    <FaceRecognition box = {this.state.box} imageUrl={this.state.imageUrl}/>\n\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}