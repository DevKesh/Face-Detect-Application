{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/keshav/Desktop/Final_Project/facedetectionapp/src/App.js\";\nimport Particles from 'react-particles-js';\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'dd91e4203deb4b1495e3e65ab6a5ed75'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 130,\n      density: {\n        enable: true,\n        vaue_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = (data, i) => {\n      let clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n      let image = document.getElementById('inputimage');\n      let width = Number(image.width);\n      let height = Number(image.height);\n      console.log(data);\n      return {\n        leftcol: clarifaiFace.left_col * width,\n        toprow: clarifaiFace.top_row * height,\n        rightcol: width - clarifaiFace.right_col * width,\n        bottomrow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: [...this.state.box, box]\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        box: [],\n        imageUrl: this.state.input,\n        showImage: true\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        for (let i = 0; i < response.outputs[0].data.regions.length; i++) {\n          this.displayFaceBox(this.calculateFaceLocation(response, i));\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        imageUrl: this.state.imageUrl,\n        showImage: this.state.showImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/keshav/Desktop/Final_Project/facedetectionapp/src/App.js"],"names":["Particles","React","Component","Clarifai","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","vaue_area","constructor","calculateFaceLocation","data","i","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftcol","left_col","toprow","top_row","rightcol","right_col","bottomrow","bottom_row","displayFaceBox","box","setState","state","onInputChange","event","input","target","onButtonSubmit","imageUrl","showImage","models","predict","FACE_DETECT_MODEL","then","response","length","catch","err","render"],"mappings":"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","sourcesContent":["import Particles from 'react-particles-js';\nimport React , { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'dd91e4203deb4b1495e3e65ab6a5ed75'\n });\n\n\n\nconst particlesOptions = {\n\n  particles: {\n    number:{\n      value:130,\n      density:{\n        enable:true,\n        vaue_area:800\n      }\n    }\n    }\n  }\n\n\n\n\n\nclass App extends Component {\n\n  constructor(){\n\n\n    super();\n    this.state = {\n\n      input: '',\n      imageUrl: '',\n      box:[]\n    }\n  }\n  calculateFaceLocation = (data, i) => {\n    let clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n    let image = document.getElementById('inputimage');\n    let width = Number(image.width);\n    let height = Number(image.height);\n    console.log(data);\n    return {\n      leftcol: clarifaiFace.left_col * width,\n      toprow: clarifaiFace.top_row * height,\n      rightcol: width - (clarifaiFace.right_col * width),\n      bottomrow: height - (clarifaiFace.bottom_row * height)\n      \n    }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({\n    box: [...this.state.box, box]\n  });\n}\n\nonInputChange = (event) => {\n  this.setState({input: event.target.value});\n}\n\nonButtonSubmit = () => {\n  this.setState({\n    box: [],\n    imageUrl: this.state.input,\n    showImage: true\n  });\n\n  app.models.predict(\n    Clarifai.FACE_DETECT_MODEL, \n    this.state.input)\n  .then(response => {\n    for(let i = 0; i < response.outputs[0].data.regions.length; i++){\n      this.displayFaceBox(this.calculateFaceLocation(response,i))\n    }\n    \n    \n    \n  }\n  )\n  .catch(err => console.log(err));\n}\n      \n  \n  render()\n  {\n    return(\n    <div className=\"App\">\n       <Particles className = 'particles' \n              params={particlesOptions}\n            />\n    <Navigation/>\n     <Logo/>\n     <Rank/>\n     <ImageLinkForm \n                  onInputChange={this.onInputChange}\n                  onButtonSubmit={this.onButtonSubmit}\n                />\n                <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} showImage={this.state.showImage}/>\n\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}